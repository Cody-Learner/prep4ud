#!/bin/bash
#
# prep4ud-testing-2018-12-01-08:18:19
#
# Run as root or user.
#
# Attribute Trilby: https://bbs.archlinux.org/viewtopic.php?pid=1775384#p1775384 , for 'Was' variable awk code.
# Thanks: Foxboron, Morganamilo, and others @ reddit.com/r/archlinux/ for the idea feedback and help.
#
#------------------------------------------------------------------------------------------------------------------------------
# Detecting the user lead me to understand why programs send logs (ie: report) to /var/log, and the usefulness of printf for arrays.
# Same output from following commands...
# Printf is appr 25 times faster, not to mention other potential issues using echo for arrays.
#
# echo "${Uzr[@]}" | xargs -n 2
#  
# printf '%s\n' "${Uzr[@]}"
#
# NEXT, what if no user is logged... but 
# Going back to UZR=$(getent passwd 1000 | awk -F':' '{print $1}')
#
# Also realize didn't need seperate package cache.
#
# https://paste.pound-python.org/show/eLojGwhUIYPdNSex0Feh/
#------------------------------------------------------------------------------------------------------------------------------

if	[[ ${1} = "-Syu" ]]; then
	echo " Moving pre-downloaded updates to pacman cache ....."; sleep 1
	sudo mv /var/cache/prep4ud/pkg/* /var/cache/pacman/pkg 2>/dev/null
	sudo pacman --color=always -Syu
	exit
fi


Uzr=($(who | awk '!/root/ {print $1}' | awk '!seen[$0]++'))				# Uzr    User name
Nu=${#Uzr[*]}										# Nu     Number logged in users 

	((Nu < 1)) && declare -r Uzr=root && declare -r Sendto="/var/log/prep4ud-$(date '+%Y-%m-%d')"
if	((Nu > 1)) ; then cat <<-EOF

	Detected more than one non root user logged in.
	Enter a logged in user name to send prep4ud report.
EOF
	read -r Usn

	if	((Nu > 0)) && [[ "${Usn}" = $(printf '%s\n' "${Uzr[@]}" | grep "${Usn}") ]]; then
		declare -r Uzr="${Usn}"
	    else
		echo "Not a logged in non root user name. Defaulting to root, sending report to /var/log/prep4ud-$(date '+%Y-%m-%d')."
		declare -r Uzr=root && declare -r Sendto="/var/log/prep4ud-$(date '+%Y-%m-%d')"
	fi
fi

#------------------------------------------------------------------------------------------------------------------------------

Pkgcac="/var/cache/prep4ud/pkg"; [[ -d "${Pkgcac}" ]] || sudo mkdir -p "${Pkgcac}"	# Pkgcac  Prep4ud package cache

DataB="/var/lib/prep4ud/"								# DataB   Prep4ud database

Before=$(find "${Pkgcac}" -type f | wc -l)						# Before  Pkgcac package count before updating

Sendto="/home/${Uzr}/Desktop/prep4ud.rep/prep4ud-$(date '+%Y-%m-%d')" 			# Sendto  Path prep4ud sends report

Lrb=$(uptime -p | awk '{$1=""; print}')							# Lrb     Last reboot date

#====================================  WAS VARIABLE  ===================================# Was     Last update date

Was=$(awk -F'[][ :-]' ' /upgrade$/ {last = mktime($2 " " $3 " " $4 " " $5 " " $6 " 00")}
	END	{	s = systime() - last;
			d = int(s / 86400);
			h = int((s - d * 86400) / 3600)
			m = int((s - d * 86400 - h * 3600) / 60)
			printf "%d days, %d hours, %d minutes ago\n", d, h, m
		}     ' /var/log/pacman.log)

#=======================================================================================#

	[[ -d /home/"${Uzr}"/Desktop/prep4ud.rep ]] || mkdir -p /home/"${Uzr}"/Desktop/prep4ud.rep
	[[ -d "${DataB}" ]]                         || sudo mkdir -p  "${DataB}"
	[[ -d "${DataB}"/local ]]                   && sudo rm -rd    "${DataB}"/local
	touch "${Sendto}"

	sudo cp -r /var/lib/pacman/* "${DataB}"
	sudo pacman -Syyuw --dbpath  "${DataB}" --cachedir "${Pkgcac}" --noconfirm

After=$(find "${Pkgcac}" -type f | wc -l)						# After   Pkgcac package count after updating
											# Pkls    Updatable package list
Pkls=$(find  "${Pkgcac}" -type f | awk -F'/'     '{print $6}' | \
	awk -F'-x86' '{print $1}'| awk -F'-any.' '{print $1}' | sort)

if	[[ ${Before} = "${After}"  ]]; then	# [[ test = "${After}"  ]]
	echo "     No updates available"
	cat <<-EOF >"${Sendto}"
	Last update  : ${Was}
	Last reboot  :${Lrb} ago

	No updates available
EOF
	exit
    else
	cat <<-EOF >"${Sendto}"
	Last update  : ${Was}
	Last reboot  :${Lrb} ago

	Updates available: ${After}

	${Pkls}
EOF
	chown "${Uzr}" "${Sendto}"
fi
